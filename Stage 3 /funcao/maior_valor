#Exercício Python 099: Faça um programa que tenha uma função chamada maior(), 
#que receba vários parâmetros com valores inteiros. Seu programa tem que analisar 
#todos os valores e dizer qual deles é o maior.

from time import sleep

#nome do programa:
apresentacao = ['R','e','t','o','r','n','e',' ','o',' ','M','a','i','o','r']
#iterando para o texto de apresentacao surgir letra por letra:
for i in apresentacao:
    print(f'\033[1;31m{i}\033[0m', end='')
    sleep(0.4)
print()

tamanho_pontos = 40 #para auxiliar na estetica dos prints

def chamada_maior():
    """
    Analisa vários números inteiros e informa qual o maior
    """
    maior = max(lista_numeros)
    print()
    analizando = ['Analisando','.','.','.']
    print('\033[1;30m.\033[0m' * tamanho_pontos)

    #imprime o i que recebe a string:
    for i in analizando:
        print(f'\033[1;30;41m{i}\033[0m', end='')
        sleep(0.7)
    print()
    print('\033[1;30m.\033[0m' * tamanho_pontos)
    print(f'\033[1;30;41m O maior valor é: {maior} \033[0m')
   
    
#programa principal:
lista_numeros = list() 
while True:
    while True:
        try:
            numeros = int(input('Digite um número inteiro: '))
            break
        except ValueError:
            print('\033[1;31mValor inválido! Digite um número inteiro\033[0m')

    lista_numeros.append(numeros)
    while True:
        add_numero = input('Deseja adicionar mais um numero: [S/N]').strip().upper()
        if add_numero in ['S','N']:
            break
        else:
            print('\033[1;31mResposta inválida!\nDigite (S) para sim ou (N) para não\033[0m')

    if add_numero == 'N':
        finalizando = ['Finalizando a coleta de dados','.','.','.']
        for i in finalizando:
            print(f'\033[1;30;41m{i}\033[0m', end='')
            sleep(0.7)
        break
chamada_maior()
sleep(0.7)
